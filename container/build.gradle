plugins {
    id 'java-library'
    alias libs.plugins.protobuf
}

group = rootProject.group
version = rootProject.version

sourceSets {
    main {
        proto {
            srcDir rootProject.sourceSets.main.proto.srcDirs
        }
    }
}

protobuf {
    def protobufVersion = libs.versions.protobuf.asProvider().get()
    def grpcVersion = libs.versions.grpc.get()
    def reactorGrpcVersion = libs.versions.reactor.grpc.get()

    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
        reactor {
            artifact = "com.salesforce.servicelibs:reactor-grpc:${reactorGrpcVersion}"
        }
    }

    generateProtoTasks {
        ofSourceSet("main")*.plugins {
            grpc {}
            reactor {}
        }
    }
}

tasks.every { task ->
    task.dependsOn ':extractProto'
}

publishing {
    publications {
        "$project.name"(MavenPublication) {
            pom {
                description = "houston asset container"
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform(libs.junit.bom)
    testImplementation libs.junit.jupiter

    api project(':api')

    implementation libs.slf4j.api

    compileOnly libs.lombok
    annotationProcessor libs.lombok
    testCompileOnly libs.lombok
    testAnnotationProcessor libs.lombok

    implementation libs.reactor.core
    implementation libs.reactor.tools

    runtimeOnly libs.grpc.netty.shaded
    implementation libs.grpc.api
    implementation libs.grpc.stub
    implementation libs.grpc.protobuf
    implementation libs.protobuf.java
    implementation libs.reactor.grpc.stub

    implementation libs.spring.context
    implementation libs.spring.data.relational

    implementation libs.cqengine
    implementation libs.jsqlparser
}

test {
    useJUnitPlatform()
}
